// Paquetes que utilizamos para levantar nuestra API REST
const express = require('express');
const morgan = require('morgan');
const cors = require('cors');

// Referencia al router
const apiRoutes = require('./routes/index.routes');

// Configuracion de nuestra BBDD
require('./config/db');

// Arrancamos el server de express üî•
const server = express();

// CORS pa que
server.use(cors());

// Middleware de express, obligatorio, viene en la documentacion
server.use(express.urlencoded({ extended: false }));

// Middleware que permite una ruta a contenido est√°tico
server.use(express.static('public'));

// Este parsea todo el body de las peticiones HTTP en json
server.use(express.json());

server.use(apiRoutes);

server.use(morgan('tiny'));

// Ultima red de seguridad para control de errores
server.use((err, req, res, next) => {
  console.log('Entramos en el control de errores');
  return res.status(err.status || 500).json(err.message || 'Unexpected error');
});

const PORT = process.env.PORT || 3001;

server.listen(PORT, () => {
  console.log('Welcome to the');
  console.log('‚ñà‚ñà‚ñì     ‚ñà    ‚ñà‚ñà  ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ   ‚ñà‚ñà ‚ñÑ‚ñà‚ñÄ‚ñì‚ñà‚ñà   ‚ñà‚ñà‚ñì');
  console.log('‚ñí‚ñà‚ñà‚ñë    ‚ñì‚ñà‚ñà  ‚ñí‚ñà‚ñà‚ñë‚ñí‚ñì‚ñà    ‚ñÑ ‚ñì‚ñà‚ñà‚ñà‚ñÑ‚ñë   ‚ñí‚ñà‚ñà ‚ñà‚ñà‚ñë');
  console.log('‚ñí‚ñà‚ñà‚ñë    ‚ñì‚ñì‚ñà  ‚ñë‚ñà‚ñà‚ñë‚ñí‚ñì‚ñì‚ñÑ ‚ñÑ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñà‚ñÑ   ‚ñë ‚ñê‚ñà‚ñà‚ñì‚ñë');
  console.log('‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñí ‚ñì‚ñà‚ñà‚ñà‚ñÄ ‚ñë‚ñí‚ñà‚ñà‚ñí ‚ñà‚ñÑ  ‚ñë ‚ñà‚ñà‚ñí‚ñì‚ñë');
  console.log('‚ñë ‚ñë ‚ñí  ‚ñë‚ñë‚ñë‚ñí‚ñë ‚ñë ‚ñë   ‚ñë  ‚ñí   ‚ñë ‚ñë‚ñí ‚ñí‚ñë ‚ñì‚ñà‚ñà ‚ñë‚ñí‚ñë ');
  console.log('  ‚ñë ‚ñë    ‚ñë‚ñë‚ñë ‚ñë ‚ñë ‚ñë        ‚ñë ‚ñë‚ñë ‚ñë  ‚ñí ‚ñí ‚ñë‚ñë  ');
  console.log('    ‚ñë  ‚ñë   ‚ñë     ‚ñë ‚ñë      ‚ñë  ‚ñë    ‚ñë ‚ñë     ');
  console.log('                 ‚ñë                ‚ñë ‚ñë      API REST');
  console.log(`*** Conectados a http://localhost:${PORT} ***`);
});
